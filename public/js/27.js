(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[27],{

/***/ "./node_modules/@trevoreyre/autocomplete-vue/dist/autocomplete.esm.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@trevoreyre/autocomplete-vue/dist/autocomplete.esm.js ***!
  \****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(global) {function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\n// Polyfill for element.matches, to support Internet Explorer. It's a relatively\n// simple polyfill, so we'll just include it rather than require the user to\n// include the polyfill themselves. Adapted from\n// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\nvar matches = function matches(element, selector) {\n  return element.matches ? element.matches(selector) : element.msMatchesSelector ? element.msMatchesSelector(selector) : element.webkitMatchesSelector ? element.webkitMatchesSelector(selector) : null;\n};\n\n// Polyfill for element.closest, to support Internet Explorer. It's a relatively\n\nvar closestPolyfill = function closestPolyfill(el, selector) {\n  var element = el;\n\n  while (element && element.nodeType === 1) {\n    if (matches(element, selector)) {\n      return element;\n    }\n\n    element = element.parentNode;\n  }\n\n  return null;\n};\n\nvar closest = function closest(element, selector) {\n  return element.closest ? element.closest(selector) : closestPolyfill(element, selector);\n};\n\n// Returns true if the value has a \"then\" function. Adapted from\n// https://github.com/graphql/graphql-js/blob/499a75939f70c4863d44149371d6a99d57ff7c35/src/jsutils/isPromise.js\nvar isPromise = function isPromise(value) {\n  return Boolean(value && typeof value.then === 'function');\n};\n\nvar AutocompleteCore = function AutocompleteCore() {\n  var _this = this;\n\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      search = _ref.search,\n      _ref$autoSelect = _ref.autoSelect,\n      autoSelect = _ref$autoSelect === void 0 ? false : _ref$autoSelect,\n      _ref$setValue = _ref.setValue,\n      setValue = _ref$setValue === void 0 ? function () {} : _ref$setValue,\n      _ref$setAttribute = _ref.setAttribute,\n      setAttribute = _ref$setAttribute === void 0 ? function () {} : _ref$setAttribute,\n      _ref$onUpdate = _ref.onUpdate,\n      onUpdate = _ref$onUpdate === void 0 ? function () {} : _ref$onUpdate,\n      _ref$onSubmit = _ref.onSubmit,\n      onSubmit = _ref$onSubmit === void 0 ? function () {} : _ref$onSubmit,\n      _ref$onShow = _ref.onShow,\n      onShow = _ref$onShow === void 0 ? function () {} : _ref$onShow,\n      _ref$onHide = _ref.onHide,\n      onHide = _ref$onHide === void 0 ? function () {} : _ref$onHide,\n      _ref$onLoading = _ref.onLoading,\n      onLoading = _ref$onLoading === void 0 ? function () {} : _ref$onLoading,\n      _ref$onLoaded = _ref.onLoaded,\n      onLoaded = _ref$onLoaded === void 0 ? function () {} : _ref$onLoaded;\n\n  _classCallCheck(this, AutocompleteCore);\n\n  _defineProperty(this, \"value\", '');\n\n  _defineProperty(this, \"searchCounter\", 0);\n\n  _defineProperty(this, \"results\", []);\n\n  _defineProperty(this, \"selectedIndex\", -1);\n\n  _defineProperty(this, \"handleInput\", function (event) {\n    var value = event.target.value;\n\n    _this.updateResults(value);\n\n    _this.value = value;\n  });\n\n  _defineProperty(this, \"handleKeyDown\", function (event) {\n    var key = event.key;\n\n    switch (key) {\n      case 'Up': // IE/Edge\n\n      case 'Down': // IE/Edge\n\n      case 'ArrowUp':\n      case 'ArrowDown':\n        {\n          var selectedIndex = key === 'ArrowUp' || key === 'Up' ? _this.selectedIndex - 1 : _this.selectedIndex + 1;\n          event.preventDefault();\n\n          _this.handleArrows(selectedIndex);\n\n          break;\n        }\n\n      case 'Tab':\n        {\n          _this.selectResult();\n\n          break;\n        }\n\n      case 'Enter':\n        {\n          var selectedResult = _this.results[_this.selectedIndex];\n\n          _this.selectResult();\n\n          _this.onSubmit(selectedResult);\n\n          break;\n        }\n\n      case 'Esc': // IE/Edge\n\n      case 'Escape':\n        {\n          _this.hideResults();\n\n          _this.setValue();\n\n          break;\n        }\n\n      default:\n        return;\n    }\n  });\n\n  _defineProperty(this, \"handleFocus\", function (event) {\n    var value = event.target.value;\n\n    _this.updateResults(value);\n\n    _this.value = value;\n  });\n\n  _defineProperty(this, \"handleBlur\", function () {\n    _this.hideResults();\n  });\n\n  _defineProperty(this, \"handleResultMouseDown\", function (event) {\n    event.preventDefault();\n  });\n\n  _defineProperty(this, \"handleResultClick\", function (event) {\n    var target = event.target;\n    var result = closest(target, '[data-result-index]');\n\n    if (result) {\n      _this.selectedIndex = parseInt(result.dataset.resultIndex, 10);\n      var selectedResult = _this.results[_this.selectedIndex];\n\n      _this.selectResult();\n\n      _this.onSubmit(selectedResult);\n    }\n  });\n\n  _defineProperty(this, \"handleArrows\", function (selectedIndex) {\n    // Loop selectedIndex back to first or last result if out of bounds\n    var resultsCount = _this.results.length;\n    _this.selectedIndex = (selectedIndex % resultsCount + resultsCount) % resultsCount; // Update results and aria attributes\n\n    _this.onUpdate(_this.results, _this.selectedIndex);\n  });\n\n  _defineProperty(this, \"selectResult\", function () {\n    var selectedResult = _this.results[_this.selectedIndex];\n\n    if (selectedResult) {\n      _this.setValue(selectedResult);\n    }\n\n    _this.hideResults();\n  });\n\n  _defineProperty(this, \"updateResults\", function (value) {\n    var currentSearch = ++_this.searchCounter;\n\n    _this.onLoading();\n\n    _this.search(value).then(function (results) {\n      if (currentSearch !== _this.searchCounter) {\n        return;\n      }\n\n      _this.results = results;\n\n      _this.onLoaded();\n\n      if (_this.results.length === 0) {\n        _this.hideResults();\n\n        return;\n      }\n\n      _this.selectedIndex = _this.autoSelect ? 0 : -1;\n\n      _this.onUpdate(_this.results, _this.selectedIndex);\n\n      _this.showResults();\n    });\n  });\n\n  _defineProperty(this, \"showResults\", function () {\n    _this.setAttribute('aria-expanded', true);\n\n    _this.onShow();\n  });\n\n  _defineProperty(this, \"hideResults\", function () {\n    _this.selectedIndex = -1;\n    _this.results = [];\n\n    _this.setAttribute('aria-expanded', false);\n\n    _this.setAttribute('aria-activedescendant', '');\n\n    _this.onUpdate(_this.results, _this.selectedIndex);\n\n    _this.onHide();\n  });\n\n  _defineProperty(this, \"checkSelectedResultVisible\", function (resultsElement) {\n    var selectedResultElement = resultsElement.querySelector(\"[data-result-index=\\\"\".concat(_this.selectedIndex, \"\\\"]\"));\n\n    if (!selectedResultElement) {\n      return;\n    }\n\n    var resultsPosition = resultsElement.getBoundingClientRect();\n    var selectedPosition = selectedResultElement.getBoundingClientRect();\n\n    if (selectedPosition.top < resultsPosition.top) {\n      // Element is above viewable area\n      resultsElement.scrollTop -= resultsPosition.top - selectedPosition.top;\n    } else if (selectedPosition.bottom > resultsPosition.bottom) {\n      // Element is below viewable area\n      resultsElement.scrollTop += selectedPosition.bottom - resultsPosition.bottom;\n    }\n  });\n\n  this.search = isPromise(search) ? search : function (value) {\n    return Promise.resolve(search(value));\n  };\n  this.autoSelect = autoSelect;\n  this.setValue = setValue;\n  this.setAttribute = setAttribute;\n  this.onUpdate = onUpdate;\n  this.onSubmit = onSubmit;\n  this.onShow = onShow;\n  this.onHide = onHide;\n  this.onLoading = onLoading;\n  this.onLoaded = onLoaded;\n};\n\n// Generates a unique ID, with optional prefix. Adapted from\n// https://github.com/lodash/lodash/blob/61acdd0c295e4447c9c10da04e287b1ebffe452c/uniqueId.js\nvar idCounter = 0;\n\nvar uniqueId = function uniqueId() {\n  var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return \"\".concat(prefix).concat(++idCounter);\n};\n\n// Calculates whether element2 should be above or below element1. Always\n// places element2 below unless all of the following:\n// 1. There isn't enough visible viewport below to fit element2\n// 2. There is more room above element1 than there is below\n// 3. Placing elemen2 above 1 won't overflow window\nvar getRelativePosition = function getRelativePosition(element1, element2) {\n  var position1 = element1.getBoundingClientRect();\n  var position2 = element2.getBoundingClientRect();\n  var positionAbove =\n  /* 1 */\n  position1.bottom + position2.height > window.innerHeight &&\n  /* 2 */\n  window.innerHeight - position1.bottom < position1.top &&\n  /* 3 */\n  window.pageYOffset + position1.top - position2.height > 0;\n  return positionAbove ? 'above' : 'below';\n};\n\n// Credit David Walsh (https://davidwalsh.name/javascript-debounce-function)\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\nvar debounce = function debounce(func, wait, immediate) {\n  var timeout;\n  return function executedFunction() {\n    var context = this;\n    var args = arguments;\n\n    var later = function later() {\n      timeout = null;\n      if (!immediate) func.apply(context, args);\n    };\n\n    var callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) func.apply(context, args);\n  };\n};\n\nvar script = {\n  name: 'Autocomplete',\n  inheritAttrs: false,\n  props: {\n    search: {\n      type: Function,\n      required: true\n    },\n    baseClass: {\n      type: String,\n      \"default\": 'autocomplete'\n    },\n    autoSelect: {\n      type: Boolean,\n      \"default\": false\n    },\n    getResultValue: {\n      type: Function,\n      \"default\": function _default(result) {\n        return result;\n      }\n    },\n    defaultValue: {\n      type: String,\n      \"default\": ''\n    },\n    debounceTime: {\n      type: Number,\n      \"default\": 0\n    }\n  },\n  data: function data() {\n    var core = new AutocompleteCore({\n      search: this.search,\n      autoSelect: this.autoSelect,\n      setValue: this.setValue,\n      onUpdate: this.handleUpdate,\n      onSubmit: this.handleSubmit,\n      onShow: this.handleShow,\n      onHide: this.handleHide,\n      onLoading: this.handleLoading,\n      onLoaded: this.handleLoaded\n    });\n\n    if (this.debounceTime > 0) {\n      core.handleInput = debounce(core.handleInput, this.debounceTime);\n    }\n\n    return {\n      core: core,\n      value: this.defaultValue,\n      resultListId: uniqueId(\"\".concat(this.baseClass, \"-result-list-\")),\n      results: [],\n      selectedIndex: -1,\n      expanded: false,\n      loading: false,\n      position: 'below',\n      resetPosition: true\n    };\n  },\n  computed: {\n    rootProps: function rootProps() {\n      return {\n        \"class\": this.baseClass,\n        style: {\n          position: 'relative'\n        },\n        'data-expanded': this.expanded,\n        'data-loading': this.loading,\n        'data-position': this.position\n      };\n    },\n    inputProps: function inputProps() {\n      return _objectSpread2({\n        \"class\": \"\".concat(this.baseClass, \"-input\"),\n        value: this.value,\n        role: 'combobox',\n        autocomplete: 'off',\n        autocapitalize: 'off',\n        autocorrect: 'off',\n        spellcheck: 'false',\n        'aria-autocomplete': 'list',\n        'aria-haspopup': 'listbox',\n        'aria-owns': this.resultListId,\n        'aria-expanded': this.expanded ? 'true' : 'false',\n        'aria-activedescendant': this.selectedIndex > -1 ? this.resultProps[this.selectedIndex].id : ''\n      }, this.$attrs);\n    },\n    inputListeners: function inputListeners() {\n      return {\n        input: this.handleInput,\n        keydown: this.core.handleKeyDown,\n        focus: this.core.handleFocus,\n        blur: this.core.handleBlur\n      };\n    },\n    resultListProps: function resultListProps() {\n      var yPosition = this.position === 'below' ? 'top' : 'bottom';\n      return {\n        id: this.resultListId,\n        \"class\": \"\".concat(this.baseClass, \"-result-list\"),\n        role: 'listbox',\n        style: _defineProperty({\n          position: 'absolute',\n          zIndex: 1,\n          width: '100%',\n          visibility: this.expanded ? 'visible' : 'hidden',\n          pointerEvents: this.expanded ? 'auto' : 'none'\n        }, yPosition, '100%')\n      };\n    },\n    resultListListeners: function resultListListeners() {\n      return {\n        mousedown: this.core.handleResultMouseDown,\n        click: this.core.handleResultClick\n      };\n    },\n    resultProps: function resultProps() {\n      var _this = this;\n\n      return this.results.map(function (result, index) {\n        return _objectSpread2({\n          id: \"\".concat(_this.baseClass, \"-result-\").concat(index),\n          \"class\": \"\".concat(_this.baseClass, \"-result\"),\n          'data-result-index': index,\n          role: 'option'\n        }, _this.selectedIndex === index ? {\n          'aria-selected': 'true'\n        } : {});\n      });\n    }\n  },\n  mounted: function mounted() {\n    document.body.addEventListener('click', this.handleDocumentClick);\n  },\n  beforeDestroy: function beforeDestroy() {\n    document.body.removeEventListener('click', this.handleDocumentClick);\n  },\n  updated: function updated() {\n    if (!this.$refs.input || !this.$refs.resultList) {\n      return;\n    }\n\n    if (this.resetPosition && this.results.length > 0) {\n      this.resetPosition = false;\n      this.position = getRelativePosition(this.$refs.input, this.$refs.resultList);\n    }\n\n    this.core.checkSelectedResultVisible(this.$refs.resultList);\n  },\n  methods: {\n    setValue: function setValue(result) {\n      this.value = result ? this.getResultValue(result) : '';\n    },\n    handleUpdate: function handleUpdate(results, selectedIndex) {\n      this.results = results;\n      this.selectedIndex = selectedIndex;\n      this.$emit('update', results, selectedIndex);\n    },\n    handleShow: function handleShow() {\n      this.expanded = true;\n    },\n    handleHide: function handleHide() {\n      this.expanded = false;\n      this.resetPosition = true;\n    },\n    handleLoading: function handleLoading() {\n      this.loading = true;\n    },\n    handleLoaded: function handleLoaded() {\n      this.loading = false;\n    },\n    handleInput: function handleInput(event) {\n      this.value = event.target.value;\n      this.core.handleInput(event);\n    },\n    handleSubmit: function handleSubmit(selectedResult) {\n      this.$emit('submit', selectedResult);\n    },\n    handleDocumentClick: function handleDocumentClick(event) {\n      if (this.$refs.root.contains(event.target)) {\n        return;\n      }\n\n      this.core.hideResults();\n    }\n  }\n};\n\nfunction normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\n/* script */\nconst __vue_script__ = script;\n\n/* template */\nvar __vue_render__ = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"root\"},[_vm._t(\"default\",[_c('div',_vm._b({},'div',_vm.rootProps,false),[_c('input',_vm._g(_vm._b({ref:\"input\",on:{\"input\":_vm.handleInput,\"keydown\":_vm.core.handleKeyDown,\"focus\":_vm.core.handleFocus,\"blur\":_vm.core.handleBlur}},'input',_vm.inputProps,false),_vm.$listeners)),_vm._v(\" \"),_c('ul',_vm._g(_vm._b({ref:\"resultList\"},'ul',_vm.resultListProps,false),_vm.resultListListeners),[_vm._l((_vm.results),function(result,index){return [_vm._t(\"result\",[_c('li',_vm._b({key:_vm.resultProps[index].id},'li',_vm.resultProps[index],false),[_vm._v(\"\\n              \"+_vm._s(_vm.getResultValue(result))+\"\\n            \")])],{\"result\":result,\"props\":_vm.resultProps[index]})]})],2)])],{\"rootProps\":_vm.rootProps,\"inputProps\":_vm.inputProps,\"inputListeners\":_vm.inputListeners,\"resultListProps\":_vm.resultListProps,\"resultListListeners\":_vm.resultListListeners,\"results\":_vm.results,\"resultProps\":_vm.resultProps})],2)};\nvar __vue_staticRenderFns__ = [];\n\n  /* style */\n  const __vue_inject_styles__ = undefined;\n  /* scoped */\n  const __vue_scope_id__ = undefined;\n  /* module identifier */\n  const __vue_module_identifier__ = undefined;\n  /* functional template */\n  const __vue_is_functional_template__ = false;\n  /* style inject */\n  \n  /* style inject SSR */\n  \n  /* style inject shadow dom */\n  \n\n  \n  const __vue_component__ = normalizeComponent(\n    { render: __vue_render__, staticRenderFns: __vue_staticRenderFns__ },\n    __vue_inject_styles__,\n    __vue_script__,\n    __vue_scope_id__,\n    __vue_is_functional_template__,\n    __vue_module_identifier__,\n    false,\n    undefined,\n    undefined,\n    undefined\n  );\n\nfunction install(Vue) {\n  if (install.installed) {\n    return;\n  }\n\n  install.installed = true;\n  Vue.component('Autocomplete', __vue_component__);\n}\n\nvar plugin = {\n  install: install\n}; // Auto install if Vue is found\n\nvar GlobalVue;\n\nif (typeof window !== 'undefined') {\n  GlobalVue = window.Vue;\n} else if (typeof global !== 'undefined') {\n  GlobalVue = global.Vue;\n}\n\nif (GlobalVue) {\n  GlobalVue.use(plugin);\n} // Inject install function into component. Allows component to be registered via\n// Vue.use() as well as Vue.component()\n\n\n__vue_component__.install = install;\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (__vue_component__);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../webpack/buildin/global.js */ \"./node_modules/webpack/buildin/global.js\")))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@trevoreyre/autocomplete-vue/dist/autocomplete.esm.js\n");

/***/ })

}]);