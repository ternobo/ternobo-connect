{"version":3,"sources":["webpack:///./resources/js/Components/inputs/TextareaAutosize.vue?765e","webpack:///./resources/js/Components/inputs/TextareaAutosize.vue?27cf","webpack:///resources/js/Components/inputs/TextareaAutosize.vue","webpack:///./resources/js/Components/inputs/TextareaAutosize.vue"],"names":["component","_vm","this","_h","$createElement","_self","_c","directives","name","rawName","value","expression","style","domProps","on","resize","$event","target","composing","val"],"mappings":"mGAAA,ICAsN,ECKtN,CACE,KAAF,mBACE,MAAF,CACI,MAAJ,CACM,KAAN,gBACM,QAAN,IAEI,SAAJ,CACM,KAAN,QACM,SAAN,GAEI,UAAJ,CACM,KAAN,SACM,QAAN,MAEI,UAAJ,CACM,KAAN,SACM,QAAN,MAKI,UAAJ,CACM,KAAN,gBACM,SAAN,IAGE,KA3BF,WA4BI,MAAJ,CAEM,IAAN,KAEM,iBAAN,EACM,OAAN,SAGE,SAAF,CACI,eADJ,WAEM,OAAN,cACA,CACQ,OAAR,gDACQ,OAAR,YACQ,SAAR,mFAJA,IAOI,kBATJ,WAUM,IAAN,iBACM,OAAN,+CAEI,oBAbJ,WAcM,IAAN,iBACM,OAAN,iDAEI,kBAjBJ,WAkBM,IAAN,iBACM,OAAN,gDAGE,MAAF,CACI,MADJ,SACA,GACM,KAAN,OAEI,IAJJ,SAIA,GACM,KAAN,uBACM,KAAN,kBAEI,UARJ,WASM,KAAN,wBAEI,UAXJ,WAYM,KAAN,wBAEI,SAdJ,SAcA,GACA,mBAGE,QAAF,CACI,OADJ,WACM,IAAN,OACA,wCA4BM,OA3BA,KAAN,yCACM,KAAN,sBACQ,IAAR,wBAEA,aAEA,kBADU,GAAV,4GAKA,cACU,EAAV,6BAGA,cACA,eACY,EAAZ,YACY,EAAZ,oBAEY,EAAZ,oBAIQ,IAAR,SACQ,EAAR,kDAGA,OAGE,QA7GF,WA8GI,KAAJ,gBAEE,QAhHF,WAiHI,KAAJ,W,YC/GIA,EAAY,YACd,GHRW,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAuC,OAAjBH,EAAII,MAAMC,IAAIH,GAAa,WAAW,CAACI,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOT,EAAO,IAAEU,WAAW,QAAQC,MAAOX,EAAkB,eAAEY,SAAS,CAAC,MAASZ,EAAO,KAAGa,GAAG,CAAC,MAAQb,EAAIc,OAAO,MAAQ,SAASC,GAAWA,EAAOC,OAAOC,YAAqBjB,EAAIkB,IAAIH,EAAOC,OAAOP,aAC5U,IGUpB,EACA,KACA,KACA,MAIa,UAAAV,E","file":"js/TextareaAutosize.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.val),expression:\"val\"}],style:(_vm.computedStyles),domProps:{\"value\":(_vm.val)},on:{\"focus\":_vm.resize,\"input\":function($event){if($event.target.composing){ return; }_vm.val=$event.target.value}}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TextareaAutosize.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TextareaAutosize.vue?vue&type=script&lang=js&\"","<template>\n<textarea :style=\"computedStyles\" v-model=\"val\" @focus=\"resize\"></textarea>\n</template>\n\n<script>\nexport default {\n    name: 'TextareaAutosize',\n    props: {\n        value: {\n            type: [String, Number],\n            default: ''\n        },\n        autosize: {\n            type: Boolean,\n            default: true\n        },\n        minHeight: {\n            type: [Number],\n            'default': null\n        },\n        maxHeight: {\n            type: [Number],\n            'default': null\n        },\n        /*\n         * Force !important for style properties\n         */\n        important: {\n            type: [Boolean, Array],\n            default: false\n        }\n    },\n    data() {\n        return {\n            // data property for v-model binding with real textarea tag\n            val: null,\n            // works when content height becomes more then value of the maxHeight property\n            maxHeightScroll: false,\n            height: 'auto'\n        }\n    },\n    computed: {\n        computedStyles() {\n            if (!this.autosize) return {}\n            return {\n                resize: !this.isResizeImportant ? 'none' : 'none !important',\n                height: this.height,\n                overflow: this.maxHeightScroll ? 'auto' : (!this.isOverflowImportant ? 'hidden' : 'hidden !important')\n            }\n        },\n        isResizeImportant() {\n            const imp = this.important\n            return imp === true || (Array.isArray(imp) && imp.includes('resize'))\n        },\n        isOverflowImportant() {\n            const imp = this.important\n            return imp === true || (Array.isArray(imp) && imp.includes('overflow'))\n        },\n        isHeightImportant() {\n            const imp = this.important\n            return imp === true || (Array.isArray(imp) && imp.includes('height'))\n        }\n    },\n    watch: {\n        value(val) {\n            this.val = val\n        },\n        val(val) {\n            this.$nextTick(this.resize)\n            this.$emit('input', val)\n        },\n        minHeight() {\n            this.$nextTick(this.resize)\n        },\n        maxHeight() {\n            this.$nextTick(this.resize)\n        },\n        autosize(val) {\n            if (val) this.resize()\n        }\n    },\n    methods: {\n        resize() {\n            const important = this.isHeightImportant ? 'important' : ''\n            this.height = `auto${important ? ' !important' : ''}`\n            this.$nextTick(() => {\n                let contentHeight = (this.$el.scrollHeight + 1);\n\n                if (this.val == null) {\n                    contentHeight -= (parseInt(window.getComputedStyle(this.$el).paddingTop) + parseInt(window.getComputedStyle(this.$el).paddingBottom));\n                } else if (this.val.length < 1) {\n                    contentHeight -= (parseInt(window.getComputedStyle(this.$el).paddingTop) + parseInt(window.getComputedStyle(this.$el).paddingBottom));\n                }\n\n                if (this.minHeight) {\n                    contentHeight = contentHeight < this.minHeight ? this.minHeight : contentHeight\n                }\n\n                if (this.maxHeight) {\n                    if (contentHeight > this.maxHeight) {\n                        contentHeight = this.maxHeight\n                        this.maxHeightScroll = true\n                    } else {\n                        this.maxHeightScroll = false\n                    }\n                }\n\n                const heightVal = contentHeight + 'px'\n                this.height = `${heightVal}${important ? ' !important' : ''}`\n            })\n\n            return this\n        }\n    },\n    created() {\n        this.val = this.value\n    },\n    mounted() {\n        this.resize()\n    }\n}\n</script>\n","import { render, staticRenderFns } from \"./TextareaAutosize.vue?vue&type=template&id=5717d797&\"\nimport script from \"./TextareaAutosize.vue?vue&type=script&lang=js&\"\nexport * from \"./TextareaAutosize.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}