.CodeMirror {
    /* Set height, width, borders, and global font properties here */
    font-family: "JetBrains Mono";
    height: 300px;
    color: black;
    direction: ltr;
}

/* PADDING */

.CodeMirror-lines {
    padding: 4px 0;
    /* Vertical padding around content */
}

.CodeMirror pre {

    &.CodeMirror-line,
    &.CodeMirror-line-like {
        padding: 0 4px;

        /* Horizontal padding of content */
    }
}

.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
    background-color: white;

    /* The little square between H and V scrollbars */
}

/* GUTTER */

.CodeMirror-gutters {
    border-#{$start}: 1px solid #ddd;
    background-color: #f7f7f7;
    white-space: nowrap;
}

.CodeMirror-linenumbers {}

.CodeMirror-linenumber {
    padding: 0 3px 0 5px;
    min-width: 20px;
    text-align: $start;
    color: #999;
    white-space: nowrap;
}

.CodeMirror-guttermarker {
    color: black;
}

.CodeMirror-guttermarker-subtle {
    color: #999;
}

/* CURSOR */

.CodeMirror-cursor {
    border-#{$end}: 1px solid black;
    border-#{$start}: none;
    width: 0;
}

/* Shown when moving in bi-directional text */

.CodeMirror div.CodeMirror-secondarycursor {
    border-#{$end}: 1px solid silver;
}

.cm-fat-cursor {
    .CodeMirror-cursor {
        width: auto;
        border: 0 !important;
        background: #7e7;
    }

    div.CodeMirror-cursors {
        z-index: 1;
    }
}

.cm-fat-cursor-mark {
    background-color: rgba(20, 255, 20, 0.5);
    -webkit-animation: blink 1.06s steps(1) infinite;
    animation: blink 1.06s steps(1) infinite;
}

.cm-animate-fat-cursor {
    width: auto;
    border: 0;
    -webkit-animation: blink 1.06s steps(1) infinite;
    animation: blink 1.06s steps(1) infinite;
    background-color: #7e7;
}

@-webkit-keyframes blink {
    0% {}

    50% {
        background-color: transparent;
    }

    100% {}
}

@keyframes blink {
    0% {}

    50% {
        background-color: transparent;
    }

    100% {}
}

/* Can style cursor different in overwrite (non-insert) mode */

.CodeMirror-overwrite .CodeMirror-cursor {}

.cm-tab {
    display: inline-block;
    text-decoration: inherit;
}

.CodeMirror-rulers {
    position: absolute;
    #{$end}: 0;
    #{$start}: 0;
    top: -50px;
    bottom: 0;
    overflow: hidden;
}

.CodeMirror-ruler {
    border-#{$end}: 1px solid #ccc;
    top: 0;
    bottom: 0;
    position: absolute;
}

/* DEFAULT THEME */

.cm-s-default {
    .cm-header {
        color: blue;
    }

    .cm-quote {
        color: #090;
    }
}

.cm-negative {
    color: #d44;
}

.cm-positive {
    color: #292;
}

.cm-header,
.cm-strong {
    font-weight: bold;
}

.cm-em {
    font-style: italic;
}

.cm-link {
    text-decoration: underline;
}

.cm-strikethrough {
    text-decoration: line-through;
}

.cm-s-default {
    .cm-keyword {
        color: #708;
    }

    .cm-atom {
        color: #219;
    }

    .cm-number {
        color: #164;
    }

    .cm-def {
        color: #00f;
    }

    .cm-variable,
    .cm-punctuation,
    .cm-property,
    .cm-operator {}

    .cm-variable-2 {
        color: #05a;
    }

    .cm-variable-3,
    .cm-type {
        color: #085;
    }

    .cm-comment {
        color: #a50;
    }

    .cm-string {
        color: #a11;
    }

    .cm-string-2 {
        color: #f50;
    }

    .cm-meta,
    .cm-qualifier {
        color: #555;
    }

    .cm-builtin {
        color: #30a;
    }

    .cm-bracket {
        color: #997;
    }

    .cm-tag {
        color: #170;
    }

    .cm-attribute {
        color: #00c;
    }

    .cm-hr {
        color: #999;
    }

    .cm-link {
        color: #00c;
    }

    .cm-error {
        color: #f00;
    }
}

.cm-invalidchar {
    color: #f00;
}

.CodeMirror-composing {
    border-bottom: 2px solid;
}

/* Default styles for common addons */

div.CodeMirror span {
    &.CodeMirror-matchingbracket {
        color: #0b0;
    }

    &.CodeMirror-nonmatchingbracket {
        color: #a22;
    }
}

.CodeMirror-matchingtag {
    background: rgba(255, 150, 0, 0.3);
}

.CodeMirror-activeline-background {
    background: #e8f2ff;
}

/* STOP */

/* The rest of this file contains styles related to the mechanics of
     the editor. You probably shouldn't touch them. */

.CodeMirror {
    position: relative;
    overflow: hidden;
    background: white;
}

.CodeMirror-scroll {
    overflow: scroll !important;

    /* Things will break if this is overridden */
    /* 50px is the magic margin used to hide the element's real scrollbars */
    /* See overflow: hidden in .CodeMirror */
    margin-bottom: -50px;
    margin-#{$start}: -50px;
    padding-bottom: 50px;
    height: 100%;
    outline: none;

    /* Prevent dragging from highlighting the element */
    position: relative;
}

.CodeMirror-sizer {
    position: relative;
    border-#{$start}: 50px solid transparent;
}

/* The fake, visible scrollbars. Used to force redraw during scrolling
     before actual scrolling happens, thus preventing shaking and
     flickering artifacts. */

.CodeMirror-vscrollbar,
.CodeMirror-hscrollbar,
.CodeMirror-scrollbar-filler,
.CodeMirror-gutter-filler {
    position: absolute;
    z-index: 6;
    display: none;
    outline: none;
}

.CodeMirror-vscrollbar {
    #{$start}: 0;
    top: 0;
    overflow-x: hidden;
    overflow-y: scroll;
}

.CodeMirror-hscrollbar {
    bottom: 0;
    #{$end}: 0;
    overflow-y: hidden;
    overflow-x: scroll;
}

.CodeMirror-scrollbar-filler {
    #{$start}: 0;
    bottom: 0;
}

.CodeMirror-gutter-filler {
    #{$end}: 0;
    bottom: 0;
}

.CodeMirror-gutters {
    position: absolute;
    #{$end}: 0;
    top: 0;
    min-height: 100%;
    z-index: 3;
}

.CodeMirror-gutter {
    white-space: normal;
    height: 100%;
    display: inline-block;
    vertical-align: top;
    margin-bottom: -50px;
}

.CodeMirror-gutter-wrapper {
    position: absolute;
    z-index: 4;
    background: none !important;
    border: none !important;
}

.CodeMirror-gutter-background {
    position: absolute;
    top: 0;
    bottom: 0;
    z-index: 4;
}

.CodeMirror-gutter-elt {
    position: absolute;
    cursor: default;
    z-index: 4;
}

.CodeMirror-gutter-wrapper {

    ::-moz-selection {
        background-color: transparent;
    }

    ::selection,
    ::-moz-selection {
        background-color: transparent;
    }
}

.CodeMirror-lines {
    cursor: text;
    min-height: 1px;

    /* prevents collapsing before first draw */
}

.CodeMirror pre {

    &.CodeMirror-line,
    &.CodeMirror-line-like {
        /* Reset some styles that the rest of the page might have set */
        border-radius: 0;
        border-width: 0;
        background: transparent;
        font-family: inherit;
        font-size: inherit;
        margin: 0;
        white-space: pre;
        word-wrap: normal;
        line-height: inherit;
        color: inherit;
        z-index: 2;
        position: relative;
        overflow: visible;
        -webkit-tap-highlight-color: transparent;
        font-variant-ligatures: contextual;
    }
}

.CodeMirror-wrap pre {

    &.CodeMirror-line,
    &.CodeMirror-line-like {
        word-wrap: break-word;
        white-space: pre-wrap;
        word-break: normal;
    }
}

.CodeMirror-linebackground {
    position: absolute;
    #{$end}: 0;
    #{$start}: 0;
    top: 0;
    bottom: 0;
    z-index: 0;
}

.CodeMirror-linewidget {
    position: relative;
    z-index: 2;
    padding: 0.1px;

    /* Force widget margins to stay inside of the container */
}

.CodeMirror-widget {}

.CodeMirror-rtl pre {
    direction: rtl;
}

.CodeMirror-code {
    outline: none;
}

/* Force content-box sizing for the elements where we expect it */

.CodeMirror-scroll,
.CodeMirror-sizer,
.CodeMirror-gutter,
.CodeMirror-gutters,
.CodeMirror-linenumber {
    box-sizing: content-box;
}

.CodeMirror-measure {
    position: absolute;
    width: 100%;
    height: 0;
    overflow: hidden;
    visibility: hidden;
}

.CodeMirror-cursor {
    position: absolute;
    pointer-events: none;
}

.CodeMirror-measure pre {
    position: static;
}

div {
    &.CodeMirror-cursors {
        visibility: hidden;
        position: relative;
        z-index: 3;
    }

    &.CodeMirror-dragcursors {
        visibility: visible;
    }
}

.CodeMirror-focused div.CodeMirror-cursors {
    visibility: visible;
}

.CodeMirror-selected {
    background: #d9d9d9;
}

.CodeMirror-focused .CodeMirror-selected {
    background: #d7d4f0;
}

.CodeMirror-crosshair {
    cursor: crosshair;
}

.CodeMirror-line {
    &::-moz-selection {
        background: #d7d4f0;
    }

    &::selection {
        background: #d7d4f0;
    }

    >span {

        &::-moz-selection,
        >span::-moz-selection {
            background: #d7d4f0;
        }

        &::-moz-selection,
        >span::-moz-selection {
            background: #d7d4f0;
        }

        &::-moz-selection, >span::-moz-selection {
            background: #d7d4f0;
        }

        &::selection,
        >span::selection {
            background: #d7d4f0;
        }
    }

    &::-moz-selection {
        background: #d7d4f0;
    }

    >span {

        &::-moz-selection,
        >span::-moz-selection {
            background: #d7d4f0;
        }
    }
}

.cm-searching {
    background-color: #ffa;
    background-color: rgba(255, 255, 0, 0.4);
}

/* Used to force a border model for a node */

.cm-force-border {
    padding-#{$start}: .1px;
}

@media print {
    /* Hide the cursor when printing */

    .CodeMirror div.CodeMirror-cursors {
        visibility: hidden;
    }
}

/* See issue #2901 */

.cm-tab-wrap-hack:after {
    content: '';
}

span.CodeMirror-selectedtext {
    background: none;
}

.cm-s-moxer {
    &.CodeMirror {
        background-color: #090A0F;
        color: #8E95B4;
        line-height: 1.8;
    }

    .CodeMirror-gutters {
        background: #090A0F;
        color: #35394B;
        border: none;
    }

    .CodeMirror-guttermarker,
    .CodeMirror-guttermarker-subtle,
    .CodeMirror-linenumber {
        color: #35394B;
    }

    .CodeMirror-cursor {
        border-#{$end}: 1px solid #FFCC00;
    }

    div.CodeMirror-selected {
        background: rgba(128, 203, 196, 0.2);
    }

    &.CodeMirror-focused div.CodeMirror-selected {
        background: #212431;
    }

    .CodeMirror-line {
        &::-moz-selection {
            background: #212431;
        }

        &::selection {
            background: #212431;
        }

        >span {

            &::-moz-selection,
            >span::-moz-selection {
                background: #212431;
            }

            &::-moz-selection,
            >span::-moz-selection {
                background: #212431;
            }

            &::-moz-selection, >span::-moz-selection {
                background: #212431;
            }

            &::selection,
            >span::selection {
                background: #212431;
            }
        }

        &::-moz-selection {
            background: #212431;
        }

        >span {

            &::-moz-selection,
            >span::-moz-selection {
                background: #212431;
            }
        }
    }

    .CodeMirror-activeline-background,
    .CodeMirror-activeline-gutter .CodeMirror-linenumber {
        background: rgba(33, 36, 49, 0.5);
    }

    .cm-keyword,
    .cm-operator {
        color: #D46C6C;
    }

    .cm-variable-2 {
        color: #81C5DA;
    }

    .cm-variable-3,
    .cm-type {
        color: #f07178;
    }

    .cm-builtin {
        color: #FFCB6B;
    }

    .cm-atom {
        color: #A99BE2;
    }

    .cm-number {
        color: #7CA4C0;
    }

    .cm-def {
        color: #F5DFA5;
    }

    .CodeMirror-line .cm-def~.cm-def {
        color: #81C5DA;
    }

    .cm-string {
        color: #B2E4AE;
    }

    .cm-string-2 {
        color: #f07178;
    }

    .cm-comment {
        color: #3F445A;
    }

    .cm-variable {
        color: #8E95B4;
    }

    .cm-tag {
        color: #FF5370;
    }

    .cm-meta {
        color: #FFCB6B;
    }

    .cm-attribute {
        color: #C792EA;
    }

    .cm-property {
        color: #81C5DA;
    }

    .cm-qualifier,
    .cm-variable-3,
    .cm-type {
        color: #DECB6B;
    }

    .cm-error {
        color: rgba(255, 255, 255, 1);
        background-color: #FF5370;
    }

    .CodeMirror-matchingbracket {
        text-decoration: underline;
        color: white !important;
    }
}